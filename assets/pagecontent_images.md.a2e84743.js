import{_ as e}from"./chunks/icons.37fc62ee.js";import{_ as a,c as n,o,a as s}from"./app.b8e59d6b.js";const D=JSON.parse('{"title":"Images and Icons","description":"","frontmatter":{},"headers":[{"level":2,"title":"Image","slug":"image","link":"#image","children":[]},{"level":2,"title":"Icon","slug":"icon","link":"#icon","children":[]}],"relativePath":"pagecontent/images.md"}'),i={name:"pagecontent/images.md"},t=s(`<h1 id="images-and-icons" tabindex="-1">Images and Icons <a class="header-anchor" href="#images-and-icons" aria-hidden="true">#</a></h1><h2 id="image" tabindex="-1">Image <a class="header-anchor" href="#image" aria-hidden="true">#</a></h2><p>People are visual creatures, so images are important.</p><p>Which image will be displayed for an entry is determined in the following order in the <code>Section::getImage($entry))</code> method:</p><ul><li>An image is defined via the <a href="./../customize/events.html#define-images">Section::EVENT_DEFINE_IMAGE</a> event.</li><li>An image field is defined in the <code>imageField</code> section config setting, and at least one image is attached to that field.</li><li>An image field is defined in the <code>fallbackImageField</code> section config setting, and at least one image is attached to that field.</li><li>An image asset is defined in the <code>fallbackImage</code> plugin settings.</li></ul><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fallbackImage</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GlobalSet</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">find</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">handle</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">siteInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">one</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#A6ACCD;">featuredImage</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">one</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"></span></code></pre></div><h2 id="icon" tabindex="-1">Icon <a class="header-anchor" href="#icon" aria-hidden="true">#</a></h2><p>If there is no image, an icon is used.</p><p>Which icon will be displayed for an entry with which background color is determined in the following order in the <code>Section::getIconData($entry))</code> method:</p><ul><li>An icon/background color is defined via the <a href="./../customize/events.html#define-icons">Section::EVENT_DEFINE_ICON</a> event.</li><li>An icon/background color is defined in the <code>icon</code>/<code>iconBgColor</code> section settings.</li><li>A <code>defaultIcon</code> is defined in your <code>config\\contentoverview.php</code> file.</li><li>The <code>defaultIcon</code> that is defined in the main settings file <code>models\\Settings.php</code>.</li></ul><p>The icon is defined as a path to a svg image. Can contain an alias as in <code>@appicons/wand.svg</code>.</p><p>The background color is defined as anything than can be passed to the <code>background-image</code> css property.</p><p>There is a <code>@coicons</code> alias that points the plugins own icon folder.</p><p><img src="`+e+'" alt="Screenshot"></p>',14),c=[t];function l(d,p,r,h,g,m){return o(),n("div",null,c)}const _=a(i,[["render",l]]);export{D as __pageData,_ as default};
